name: 'Terraform GCP CI/CD'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    env:
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}
      TF_VAR_web_bucket: ${{ secrets.WEB_BUCKET }}

    if: github.event_name == 'pull_request'

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v3'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend-config="bucket=${{ secrets.BACKEND_BUCKET }}"

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
  
  terraform_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform_plan
    env:
      TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}
      TF_VAR_web_bucket: ${{ secrets.WEB_BUCKET }}
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v3'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        
    - name: Echo verify
      run: echo "This is the output of Apply here"
